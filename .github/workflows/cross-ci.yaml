name: Cross CI workflow

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*

jobs:

  repo-mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: SSH Key setup
        uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Push to mirror
        run: |
          git clone --mirror git@github.com:sgermanserrano/core_planning_actions.git
          cd core_planning_actions.git
          git remote set-url --push origin git@github.com:sgermanserrano/core_planning_mirror.git
          git fetch -p origin
          git push --mirror

  build-melodic:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #[ubuntu-latest, self-hosted]
      fail-fast: false

    env:
      VCS_FILE: build_depends.repos
      ROS_DISTRO: melodic
      AUTOWARE_CROSS_TARGET_PLATFORM: generic-aarch64
      AUTOWARE_TARGET_ARCH: aarch64
      AUTOWARE_TOOLCHAIN_FILE_PATH: ${{ github.workspace }}/cross_toolchain.cmake
      AUTOWARE_SYSROOT: /sysroot/generic-aarch64

    container:
      image: autoware/build:generic-aarch64-melodic-bleedingedge
      env:
        VCS_FILE: build_depends.repos
        ROS_DISTRO: melodic
        AUTOWARE_TARGET_ARCH: aarch64
        AUTOWARE_TOOLCHAIN_FILE_PATH: ${{ github.workspace }}/cross_toolchain.cmake
        AUTOWARE_CROSS_TARGET_PLATFORM: generic-aarch64
        AUTOWARE_SYSROOT: /sysroot/generic-aarch64
       #options: --workdir / #--user 1001

    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Build repo
      run: |
        mkdir -p src_tmp/ && mv `find -maxdepth 1 -not -name . -not -name src_tmp -not -name $VCS_FILE` src_tmp/ && mv src_tmp/ src/
        sudo apt-get update -qq && sudo apt-get install -y python3-vcstool gcc git wget
        wget https://gitlab.com/autowarefoundation/autoware.ai/docker/raw/master/crossbuild/cross_toolchain.cmake
        vcs validate < $VCS_FILE
        vcs import src/ < $VCS_FILE
        bash -c 'echo `pwd`; echo `ls`; source $AUTOWARE_SYSROOT/opt/ros/${ROS_DISTRO}/setup.bash; \
        colcon build --merge-install \
          --cmake-args \
          -DCMAKE_TOOLCHAIN_FILE=$AUTOWARE_TOOLCHAIN_FILE_PATH \
          -DCMAKE_SYSTEM_PROCESSOR=$AUTOWARE_TARGET_ARCH \
          -DCMAKE_PREFIX_PATH="$(pwd)/install/;${AUTOWARE_SYSROOT}/opt/ros/${ROS_DISTRO}" \
          -DCMAKE_FIND_ROOT_PATH=${{ github.workspace }}/install/ \
          --packages-up-to autoware_build_flags; echo `ls`; echo `ls (pwd)/install`'
        pwd
        echo "--------------"
        ls
        echo "--------------"
        ls ${{ github.workspace }}
        echo "--------------"
        ls ${{ github.workspace }}/install/
